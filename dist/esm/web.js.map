{"version":3,"file":"web.js","sourceRoot":"","sources":["../../src/web.ts"],"names":[],"mappings":"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","sourcesContent":["import type { PermissionStatus, SensorData, SensorDelay, SensorOptions, SensorResult, SensorsPlugin, SensorType } from './definitions'\n\nimport { WebPlugin } from '@capacitor/core'\nimport { SensorTypes } from './definitions'\n\nconst webSupportedSensors = {\n  AbsoluteOrientationSensor: 'ABSOLUTE_ORIENTATION',\n  Accelerometer: 'ACCELEROMETER',\n  AmbientLightSensor: 'AMBIENT_LIGHT',\n  GravitySensor: 'GRAVITY',\n  Gyroscope: 'GYROSCOPE',\n  LinearAccelerationSensor: 'LINEAR_ACCELERATION',\n  Magnetometer: 'MAGNETOMETER',\n  RelativeOrientationSensor: 'RELATIVE_ORIENTATION',\n  ondevicemotion: 'MOTION_DETECTOR',\n} satisfies Record<string, SensorType>\n\nconst webSensorFrequency: Record<SensorDelay, number> = {\n  FASTEST: 0,\n  GAME: 15,\n  UI: 30,\n  NORMAL: 60,\n}\n\nconst webNeededPerms = {\n  ABSOLUTE_ORIENTATION: ['accelerometer', 'gyroscope', 'magnetometer'],\n  ACCELEROMETER: ['accelerometer'],\n  AMBIENT_LIGHT: ['ambient-light-sensor'],\n  GRAVITY: ['accelerometer'],\n  GYROSCOPE: ['gyroscope'],\n  LINEAR_ACCELERATION: ['accelerometer'],\n  MAGNETOMETER: ['magnetometer'],\n  RELATIVE_ORIENTATION: ['accelerometer', 'gyroscope'],\n  TEMPERATURE: [],\n  GAME_ROTATION_VECTOR: [],\n  GEOMAGNETIC_ROTATION_VECTOR: [],\n  HEART_BEAT: [],\n  HEART_RATE: [],\n  MOTION_DETECTOR: [],\n  POSE_6DOF: [],\n  PRESSURE: [],\n  PROXIMITY: [],\n  RELATIVE_HUMIDITY: [],\n  ROTATION_VECTOR: [],\n  SIGNIFICANT_MOTION: [],\n  STATIONARY_DETECTOR: [],\n  STEP_COUNTER: [],\n  STEP_DETECTOR: [],\n} satisfies Record<SensorType, (keyof PermissionStatus)[]>\n\nfunction getWindowProperty(type: SensorType) {\n  return Object.entries(webSupportedSensors).find(\n    ([, value]) => value === type,\n  )?.[0] as keyof typeof webSupportedSensors\n}\n\nclass WebSensor implements SensorData {\n  private sensor: Sensor | undefined\n  private abortController: AbortController = new AbortController()\n\n  constructor(\n    public notify: (eventName: SensorType, data: SensorResult) => void,\n    public type: SensorType,\n    public delay: SensorDelay = 'NORMAL',\n  ) {\n    const windowKey = getWindowProperty(type)\n    if (!windowKey || windowKey === 'ondevicemotion') return\n    this.sensor = new (window as any)[windowKey]({ frequency: webSensorFrequency[delay] })\n  }\n\n  start(): void {\n    this.abortController = new AbortController()\n    if (this.type === 'MOTION_DETECTOR' || !this.sensor) {\n      window.addEventListener('devicemotion', (ev) => {\n        const x = ev.accelerationIncludingGravity?.x || 0\n        const y = ev.accelerationIncludingGravity?.y || 0\n        const z = ev.accelerationIncludingGravity?.z || 0\n\n        const result = {\n          accuracy: 0,\n          timestamp: ev.timeStamp,\n          values: [x, y, z],\n        } satisfies SensorResult\n\n        this.notify(this.type, result)\n      }, { signal: this.abortController.signal })\n    }\n    else {\n      const sensor = this.sensor\n      this.sensor.addEventListener('reading', () => {\n        const values: number[] = []\n        if ('illuminance' in sensor) values.push(sensor.illuminance as number)\n        if ('quaternion' in sensor) values.push(...(sensor.quaternion as number[]))\n        if ('x' in sensor) values.push(sensor.x as number)\n        if ('y' in sensor) values.push(sensor.y as number)\n        if ('z' in sensor) values.push(sensor.z as number)\n\n        const result = {\n          accuracy: 0,\n          timestamp: sensor.timestamp || 0,\n          values,\n        } satisfies SensorResult\n\n        this.notify(this.type, result)\n      })\n      this.sensor.start()\n    }\n  }\n\n  stop(): void {\n    this.sensor?.removeEventListener('reading', null)\n    this.abortController.abort('stop')\n    this.sensor?.stop()\n  }\n}\n\nexport class SensorsWeb extends WebPlugin implements SensorsPlugin {\n  private sensors: WebSensor[] = []\n\n  private onSensorData = (eventName: SensorType, data: SensorResult): void => {\n    this.notifyListeners(eventName, data, true)\n  }\n\n  async checkPermissions(): Promise<PermissionStatus> {\n    if (typeof navigator === 'undefined' || !navigator.permissions)\n      throw this.unavailable('Permissions API not available in this browser.')\n\n    const allPerms = ([] as (keyof PermissionStatus)[]).concat(...Object.values(webNeededPerms))\n    const uniquePerms = Array.from(new Set(allPerms))\n    const permission = await Promise.all(\n      uniquePerms.map(p => navigator.permissions.query({ name: p as PermissionName })),\n    )\n\n    return permission.reduce((p, c) => {\n      return {\n        ...p,\n        [c.name]: c.state,\n      }\n    }, {} as PermissionStatus)\n  }\n\n  async requestPermissions(options: { type: SensorType }): Promise<PermissionStatus> {\n    if (typeof navigator === 'undefined' || !navigator.permissions)\n      throw this.unavailable('Permissions API not available in this browser.')\n\n    const permission = await Promise.all(\n      webNeededPerms[options.type].map(p => navigator.permissions.query({ name: p as PermissionName })),\n    )\n\n    return permission.reduce((p, c) => {\n      return {\n        ...p,\n        [c.name]: c.state,\n      }\n    }, {} as PermissionStatus)\n  }\n\n  async start(options: { type: SensorType }): Promise<void> {\n    const sensor = this.sensors.find(s => s.type === options.type)\n    if (!sensor) throw this.unavailable(`Sensor of type ${options.type} not initialized.`)\n    sensor.start()\n  }\n\n  async stop(options: { type: SensorType }): Promise<void> {\n    const sensor = this.sensors.find(s => s.type === options.type)\n    if (!sensor) throw this.unavailable(`Sensor of type ${options.type} not initialized.`)\n    sensor.stop()\n  }\n\n  async init(options: SensorOptions): Promise<SensorData | undefined> {\n    const { type, delay = 'NORMAL' } = options\n    if (this.isPresent(type)) {\n      const sensor = new WebSensor(this.onSensorData, type, delay)\n      this.sensors.push(sensor)\n      return { type, delay }\n    }\n    return { type, delay }\n  }\n\n  async getAvailableSensors(): Promise<{ sensors: SensorType[] }> {\n    const sensorsList = Object.entries(webSupportedSensors)\n      .filter(([sensorName]) => sensorName in window)\n      .map(([, sensorType]) => sensorType)\n    return {\n      sensors: sensorsList,\n    }\n  }\n\n  private isPresent(type: SensorType) {\n    if (SensorTypes.includes(type)) {\n      const windowKey = getWindowProperty(type)\n      if (windowKey) return windowKey in window\n      return false\n    }\n    return false\n  }\n}\n"]}