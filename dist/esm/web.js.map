{"version":3,"file":"web.js","sourceRoot":"","sources":["../../src/web.ts"],"names":[],"mappings":"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","sourcesContent":["import type {\n  PermissionStatus,\n  SensorData,\n  SensorDelay,\n  SensorOptions,\n  SensorResult,\n  SensorsPlugin,\n  SensorType,\n} from './definitions';\n\nimport { WebPlugin } from '@capacitor/core';\nimport { SensorTypes } from './definitions';\n\nconst webSupportedSensors = {\n  AbsoluteOrientationSensor: 'ABSOLUTE_ORIENTATION',\n  Accelerometer: 'ACCELEROMETER',\n  AmbientLightSensor: 'AMBIENT_LIGHT',\n  GravitySensor: 'GRAVITY',\n  Gyroscope: 'GYROSCOPE',\n  LinearAccelerationSensor: 'LINEAR_ACCELERATION',\n  Magnetometer: 'MAGNETOMETER',\n  RelativeOrientationSensor: 'RELATIVE_ORIENTATION',\n  ondevicemotion: 'MOTION_DETECTOR',\n} satisfies Record<string, SensorType>;\n\nconst webSensorFrequency: Record<SensorDelay, number> = {\n  FASTEST: 0,\n  GAME: 15,\n  UI: 30,\n  NORMAL: 60,\n};\n\nconst webNeededPerms = {\n  ABSOLUTE_ORIENTATION: ['accelerometer', 'gyroscope', 'magnetometer'],\n  ACCELEROMETER: ['accelerometer'],\n  AMBIENT_LIGHT: ['ambient-light-sensor'],\n  GRAVITY: ['accelerometer'],\n  GYROSCOPE: ['gyroscope'],\n  LINEAR_ACCELERATION: ['accelerometer'],\n  MAGNETOMETER: ['magnetometer'],\n  RELATIVE_ORIENTATION: ['accelerometer', 'gyroscope'],\n  TEMPERATURE: [],\n  GAME_ROTATION_VECTOR: [],\n  GEOMAGNETIC_ROTATION_VECTOR: [],\n  HEART_BEAT: [],\n  HEART_RATE: [],\n  MOTION_DETECTOR: [],\n  POSE_6DOF: [],\n  PRESSURE: [],\n  PROXIMITY: [],\n  RELATIVE_HUMIDITY: [],\n  ROTATION_VECTOR: [],\n  SIGNIFICANT_MOTION: [],\n  STATIONARY_DETECTOR: [],\n  STEP_COUNTER: [],\n  STEP_DETECTOR: [],\n} satisfies Record<SensorType, (keyof PermissionStatus)[]>;\n\nfunction getWindowProperty(type: SensorType) {\n  return Object.entries(webSupportedSensors).find(\n    ([, value]) => value === type,\n  )?.[0] as keyof typeof webSupportedSensors;\n}\n\nclass WebSensor implements SensorData {\n  private sensor: Sensor | undefined;\n  private abortController: AbortController = new AbortController();\n\n  constructor(\n    public notify: (eventName: SensorType, data: SensorResult) => void,\n    public type: SensorType,\n    public delay: SensorDelay = 'NORMAL',\n  ) {\n    const windowKey = getWindowProperty(type);\n    if (!windowKey || windowKey === 'ondevicemotion') return;\n    this.sensor = new (window as any)[windowKey]({ frequency: webSensorFrequency[delay] });\n  }\n\n  start(): void {\n    this.abortController = new AbortController();\n    if (this.type === 'MOTION_DETECTOR' || !this.sensor) {\n      window.addEventListener(\n        'devicemotion',\n        (ev) => {\n          const x = ev.accelerationIncludingGravity?.x || 0;\n          const y = ev.accelerationIncludingGravity?.y || 0;\n          const z = ev.accelerationIncludingGravity?.z || 0;\n\n          const result = {\n            accuracy: 0,\n            timestamp: ev.timeStamp,\n            values: [x, y, z],\n          } satisfies SensorResult;\n\n          this.notify(this.type, result);\n        },\n        { signal: this.abortController.signal },\n      );\n    } else {\n      const sensor = this.sensor;\n      this.sensor.addEventListener('reading', () => {\n        const values: number[] = [];\n        if ('illuminance' in sensor) values.push(sensor.illuminance as number);\n        if ('quaternion' in sensor) values.push(...(sensor.quaternion as number[]));\n        if ('x' in sensor) values.push(sensor.x as number);\n        if ('y' in sensor) values.push(sensor.y as number);\n        if ('z' in sensor) values.push(sensor.z as number);\n\n        const result = {\n          accuracy: 0,\n          timestamp: sensor.timestamp || 0,\n          values,\n        } satisfies SensorResult;\n\n        this.notify(this.type, result);\n      });\n      this.sensor.start();\n    }\n  }\n\n  stop(): void {\n    this.sensor?.removeEventListener('reading', null);\n    this.abortController.abort('stop');\n    this.sensor?.stop();\n  }\n}\n\nexport class SensorsWeb extends WebPlugin implements SensorsPlugin {\n  private sensors: WebSensor[] = [];\n\n  private onSensorData = (eventName: SensorType, data: SensorResult): void => {\n    this.notifyListeners(eventName, data, true);\n  };\n\n  async checkPermissions(): Promise<PermissionStatus> {\n    if (typeof navigator === 'undefined' || !navigator.permissions) {\n      throw this.unavailable('Permissions API not available in this browser.');\n    }\n    const allPerms = ([] as (keyof PermissionStatus)[]).concat(...Object.values(webNeededPerms));\n    const uniquePerms = Array.from(new Set(allPerms));\n    const permission = await Promise.all(\n      uniquePerms.map((p) => navigator.permissions.query({ name: p as PermissionName })),\n    );\n    return permission.reduce((p, c) => {\n      return {\n        ...p,\n        [c.name]: c.state,\n      };\n    }, {} as PermissionStatus);\n  }\n\n  async requestPermissions(options: { type: SensorType }): Promise<PermissionStatus> {\n    if (typeof navigator === 'undefined' || !navigator.permissions) {\n      throw this.unavailable('Permissions API not available in this browser.');\n    }\n    const permission = await Promise.all(\n      webNeededPerms[options.type].map((p) => navigator.permissions.query({ name: p as PermissionName })),\n    );\n    return permission.reduce((p, c) => {\n      return {\n        ...p,\n        [c.name]: c.state,\n      };\n    }, {} as PermissionStatus);\n  }\n\n  async start(options: { type: SensorType }): Promise<void> {\n    const sensor = this.sensors.find((s) => s.type === options.type);\n    if (!sensor) throw this.unavailable(`Sensor of type ${options.type} not initialized.`);\n    sensor.start();\n  }\n\n  async stop(options: { type: SensorType }): Promise<void> {\n    const sensor = this.sensors.find((s) => s.type === options.type);\n    if (!sensor) throw this.unavailable(`Sensor of type ${options.type} not initialized.`);\n    sensor.stop();\n  }\n\n  async init(options: SensorOptions): Promise<SensorData | undefined> {\n    const { type, delay = 'NORMAL' } = options;\n    if (this.isPresent(type)) {\n      const sensor = new WebSensor(this.onSensorData, type, delay);\n      this.sensors.push(sensor);\n      return { type, delay };\n    }\n    return { type, delay };\n  }\n\n  async getAvailableSensors(): Promise<{ sensors: SensorType[] }> {\n    const sensorsList = Object.entries(webSupportedSensors)\n      .filter(([sensorName]) => sensorName in window)\n      .map(([, sensorType]) => sensorType);\n    return {\n      sensors: sensorsList,\n    };\n  }\n\n  private isPresent(type: SensorType) {\n    if (SensorTypes.includes(type)) {\n      const windowKey = getWindowProperty(type);\n      if (windowKey) return windowKey in window;\n      return false;\n    }\n    return false;\n  }\n}\n"]}